webpackHotUpdate("static/development/pages/index.js",{

/***/ "./components/containers/header/index.jsx":
/*!************************************************!*\
  !*** ./components/containers/header/index.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var emotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emotion */ "./node_modules/emotion/dist/index.esm.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var reactism_elements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! reactism/elements */ "./components/elements/index.jsx");
/* harmony import */ var _gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../gridLayouts/listGrid */ "./components/containers/gridLayouts/listGrid.jsx");
/* harmony import */ var _gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../gridLayouts/mainGrid */ "./components/containers/gridLayouts/mainGrid.jsx");


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







 // const Index = ({ styleColorTextHeader, ...props}) => {
// }
// export default Index

var Index =
/*#__PURE__*/
function (_Component) {
  _inherits(Index, _Component);

  function Index(props) {
    var _this;

    _classCallCheck(this, Index);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleToggle", function (value) {
      if (value === 'displayProduct') {
        // setDisplayProduct(!displayProduct)
        _this.setState({
          displayProduct: !displayProduct
        });

        displayKnowMore === true && _this.setState({
          displayKnowMore: !displayKnowMore
        });
      }

      if (value === 'displayKnowMore') {
        _this.setState({
          displayKnowMore: !displayKnowMore
        });

        displayProduct === true && _this.setState({
          displayProduct: !displayProduct
        });
      }
    });

    _this.state = {
      displayProduct: false,
      displayKnowMore: false,
      toogleNav: true
    };
    return _this;
  } // const [displayProduct, setDisplayProduct] = useState(false);
  // const [displayKnowMore, setDisplayKnowMore] = useState(false);
  // const [toogleNav, setToogleNav] = useState(true);


  _createClass(Index, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var styleColorTextHeader = this.props.styleColorTextHeader;
      var _this$state = this.state,
          toogleNav = _this$state.toogleNav,
          displayProduct = _this$state.displayProduct,
          displayKnowMore = _this$state.displayKnowMore;
      var mainStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("@import url('https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700,700i');font-family:'Ubuntu',sans-serif;position:absolute;z-index:1;background-color:transparent;box-shadow:0px -9px 25px 0px rgba(0,0,0,0.8);width:100%;margin:-8px;ul{list-style-type:none;margin:0;padding:0;overflow:hidden;li{float:left;margin-top:10px;a{cursor:pointer;text-decoration:none;padding:14px;", styleColorTextHeader || "color: #000 ", ";font-size:0.9rem;span img{margin-bottom:-6px;}}}}.sub-menu{overflow:inherit;margin:-30px 0px -30px -14px;height:70px;padding:10px 0px;li a{padding:10px;span{margin-right:10px;}}}.hamburger{cursor:pointer;width:10%;float:right;transition:0.5s;div{background-color:#000;height:2px;margin:6px 0px;transition:0.5s;}}.cross{div:nth-child(1){transform:rotate(-45deg);margin-top:13px;transition:0.5s;}div:nth-child(2){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}div:nth-child(3){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}width:10%;float:right;div{background-color:#000;height:2px;margin:4px 0px;}transition:0.5s;}.sub-menu-main-600{display:none;}.responsive{display:block;transition:all 0.5s linear;}.hamburger,.cross{display:none;}@media only screen and (max-width:600px){color:#000;background-color:#fff;margin:0px;ul{li{width:100%;margin:10px 0px;}}.cross{div:nth-child(2){height:0px;transition:0.1s;}}.display-important-600{display:none;}.sub-menu-main-600{display:block;}.sub-menu{margin:0px;}.responsive{display:none;transition:all 0.5s linear;}.hamburger,.cross{display:block;}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var listGridStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("padding-bottom:10px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var buttonTranparent =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("color:#1798D1;border:1px solid #1798D1;font-size:1rem;background-color:transparent;font-weight:100;padding:5px 15px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var buttonFilled =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("color:#fff;background-color:#1798D1;font-weight:100;padding:5px 15px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"); // const [displayProduct, setDisplayProduct] = useState(false);
      // const [displayKnowMore, setDisplayKnowMore] = useState(false);
      // const [toogleNav, setToogleNav] = useState(true);
      // const handleToggle = value => {
      //   if (value === 'displayProduct') {
      //     setDisplayProduct(!displayProduct)
      //     displayKnowMore === true && setDisplayKnowMore(!displayKnowMore)
      //   }
      //   if (value === 'displayKnowMore') {
      //     setDisplayKnowMore(!displayKnowMore)
      //     displayProduct === true && setDisplayProduct(!displayProduct)
      //   }
      // }

      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: mainStyle
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 3,
        style: listGridStyle
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: toogleNav ? 'hamburger' : 'cross',
        onClick: function onClick() {
          return _this2.setState({
            toogleNav: !toogleNav
          });
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/docob_logo.svg",
        alt: "docoblast-logo",
        width: 100
      })))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: toogleNav ? 'responsive' : ''
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 15
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayProduct');
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Produk"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: displayProduct ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "sub-menu-main-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu ".concat(displayProduct ?
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"))
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "DocoBlast")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/features"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Fitur"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/price"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Harga"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayKnowMore');
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Ketahui Lebih"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: displayKnowMore ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "sub-menu-main-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu  ".concat(displayKnowMore ?
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"))
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Panduan")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/customers"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Pelanggan Kami"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/resource"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Sumber Daya"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/team"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Tim DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/ourApi"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "DocoBlast API"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/contact"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Kontak Kami")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/blogs"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Blog"))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 6
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "responsive"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_4__["Button"], {
        style: buttonTranparent
      }, "Masuk")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_4__["Button"], {
        style: buttonFilled
      }, "Coba Gratis")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "display-important-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80,
        display: displayProduct ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 12
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "DocoBlast")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80,
        display: displayKnowMore ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 24
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Panduan")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/customers"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Pelanggan Kami"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/resource"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Sumber Daya"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/team"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Tim DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/ourApi"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "DocoBlast API"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/contact"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Kontak Kami"))))))));
    }
  }]);

  return Index;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);

/* harmony default export */ __webpack_exports__["default"] = (Index);

/***/ })

})
//# sourceMappingURL=index.js.2ca42a773f6d63fa9268.hot-update.js.map