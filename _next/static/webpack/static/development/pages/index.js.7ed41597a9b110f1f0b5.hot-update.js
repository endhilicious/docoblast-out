webpackHotUpdate("static/development/pages/index.js",{

/***/ "./components/containers/header/index.jsx":
/*!************************************************!*\
  !*** ./components/containers/header/index.jsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var emotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emotion */ "./node_modules/emotion/dist/index.esm.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var reactism_elements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! reactism/elements */ "./components/elements/index.jsx");
/* harmony import */ var _gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../gridLayouts/listGrid */ "./components/containers/gridLayouts/listGrid.jsx");
/* harmony import */ var _gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../gridLayouts/mainGrid */ "./components/containers/gridLayouts/mainGrid.jsx");


function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







 // const Index = ({ styleColorTextHeader, ...props}) => {
// }
// export default Index

var Index =
/*#__PURE__*/
function (_Component) {
  _inherits(Index, _Component);

  function Index(props) {
    var _this;

    _classCallCheck(this, Index);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleDocumentClick", function (e) {
      console.log(e.target);

      if (_assertThisInitialized(_assertThisInitialized(_this))) {
        console.log('bernar 1');

        if (!Object(react_dom__WEBPACK_IMPORTED_MODULE_1__["findDOMNode"])(_assertThisInitialized(_assertThisInitialized(_this))).contains(e.target)) {
          _this.setState({
            toogleNav: true
          });

          console.log('bernar 2');
        } else {
          console.log('bernar 3');
        }
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleToggle", function (value) {
      if (value === 'displayProduct') {
        // setDisplayProduct(!displayProduct)
        _this.setState({
          displayProduct: !displayProduct
        });

        displayKnowMore === true && _this.setState({
          displayKnowMore: !displayKnowMore
        });
      }

      if (value === 'displayKnowMore') {
        _this.setState({
          displayKnowMore: !displayKnowMore
        });

        displayProduct === true && _this.setState({
          displayProduct: !displayProduct
        });
      }
    });

    _this.state = {
      displayProduct: false,
      displayKnowMore: false,
      toogleNav: true
    };
    return _this;
  }

  _createClass(Index, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      console.log(prevProps);
      document.addEventListener('click', this.handleDocumentClick, false);
      document.addEventListener('touchend', this.handleDocumentClick, false);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener('click', this.handleDocumentClick, false);
      document.removeEventListener('touchend', this.handleDocumentClick, false);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var styleColorTextHeader = this.props.styleColorTextHeader;
      var _this$state = this.state,
          toogleNav = _this$state.toogleNav,
          displayProduct = _this$state.displayProduct,
          displayKnowMore = _this$state.displayKnowMore;
      var mainStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("@import url('https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700,700i');font-family:'Ubuntu',sans-serif;position:absolute;z-index:1;background-color:transparent;box-shadow:0px -9px 25px 0px rgba(0,0,0,0.8);width:100%;margin:-8px;ul{list-style-type:none;margin:0;padding:0;overflow:hidden;li{float:left;margin-top:10px;a{cursor:pointer;text-decoration:none;padding:14px;", styleColorTextHeader || "color: #000 ", ";font-size:0.9rem;span img{margin-bottom:-6px;}}}}.sub-menu{overflow:inherit;margin:-30px 0px -30px -14px;height:70px;padding:10px 0px;li a{padding:10px;span{margin-right:10px;}}}.hamburger{cursor:pointer;width:10%;float:right;transition:0.5s;div{background-color:#000;height:2px;margin:6px 0px;transition:0.5s;}}.cross{div:nth-child(1){transform:rotate(-45deg);margin-top:13px;transition:0.5s;}div:nth-child(2){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}div:nth-child(3){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}width:10%;float:right;div{background-color:#000;height:2px;margin:4px 0px;}transition:0.5s;}.sub-menu-main-600{display:none;}.responsive{display:block;transition:all 0.5s linear;}.hamburger,.cross{display:none;}@media only screen and (max-width:600px){color:#000;background-color:#fff;margin:0px;ul{li{width:100%;margin:10px 0px;}}.cross{div:nth-child(2){height:0px;transition:0.1s;}}.display-important-600{display:none;}.sub-menu-main-600{display:block;}.sub-menu{margin:0px;}.responsive{display:none;transition:all 0.5s linear;}.hamburger,.cross{display:block;}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbmRpL0RvY3VtZW50cy9jb2RpbmcvbmV4dC9wcm9qZWN0L3Rlc3QvY29tcG9uZW50cy9jb250YWluZXJzL2hlYWRlci9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0V5QiIsImZpbGUiOiIvVXNlcnMvZW5kaS9Eb2N1bWVudHMvY29kaW5nL25leHQvcHJvamVjdC90ZXN0L2NvbXBvbmVudHMvY29udGFpbmVycy9oZWFkZXIvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBmaW5kRE9NTm9kZSB9IGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2Vtb3Rpb24nXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdyZWFjdGlzbS9lbGVtZW50cydcblxuaW1wb3J0IExpc3RHcmlkIGZyb20gJy4uL2dyaWRMYXlvdXRzL2xpc3RHcmlkJ1xuaW1wb3J0IE1haW5HcmlkIGZyb20gJy4uL2dyaWRMYXlvdXRzL21haW5HcmlkJ1xuXG4vLyBjb25zdCBJbmRleCA9ICh7IHN0eWxlQ29sb3JUZXh0SGVhZGVyLCAuLi5wcm9wc30pID0+IHtcblxuLy8gfVxuLy8gZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuY2xhc3MgSW5kZXggZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZGlzcGxheVByb2R1Y3QgOiBmYWxzZSxcbiAgICAgIGRpc3BsYXlLbm93TW9yZSA6IGZhbHNlLFxuICAgICAgdG9vZ2xlTmF2IDogdHJ1ZSxcbiAgICB9XG4gIH1cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGNvbnNvbGUubG9nKHByZXZQcm9wcylcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlRG9jdW1lbnRDbGljaywgZmFsc2UpXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmhhbmRsZURvY3VtZW50Q2xpY2ssIGZhbHNlKVxuICB9XG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrLCBmYWxzZSlcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuaGFuZGxlRG9jdW1lbnRDbGljaywgZmFsc2UpXG4gIH1cblxuICBoYW5kbGVEb2N1bWVudENsaWNrID0gZSA9PiB7XG4gICAgY29uc29sZS5sb2coZS50YXJnZXQpXG4gICAgaWYgKHRoaXMpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdiZXJuYXIgMScpXG4gICAgICBpZiAoIWZpbmRET01Ob2RlKHRoaXMpLmNvbnRhaW5zKGUudGFyZ2V0KSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdG9vZ2xlTmF2IDogdHJ1ZSB9KVxuICAgICAgICBjb25zb2xlLmxvZygnYmVybmFyIDInKVxuICAgICAgfWVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygnYmVybmFyIDMnKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBjb25zdCBbZGlzcGxheVByb2R1Y3QsIHNldERpc3BsYXlQcm9kdWN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgLy8gY29uc3QgW2Rpc3BsYXlLbm93TW9yZSwgc2V0RGlzcGxheUtub3dNb3JlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgLy8gY29uc3QgW3Rvb2dsZU5hdiwgc2V0VG9vZ2xlTmF2XSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gIGhhbmRsZVRvZ2dsZSA9IHZhbHVlID0+IHtcbiAgICBpZiAodmFsdWUgPT09ICdkaXNwbGF5UHJvZHVjdCcpIHtcbiAgICAgIC8vIHNldERpc3BsYXlQcm9kdWN0KCFkaXNwbGF5UHJvZHVjdClcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBkaXNwbGF5UHJvZHVjdDogIWRpc3BsYXlQcm9kdWN0fSlcbiAgICAgIGRpc3BsYXlLbm93TW9yZSA9PT0gdHJ1ZSAmJiB0aGlzLnNldFN0YXRlKHsgZGlzcGxheUtub3dNb3JlIDogIWRpc3BsYXlLbm93TW9yZSB9KVxuICAgIH1cbiAgICBpZiAodmFsdWUgPT09ICdkaXNwbGF5S25vd01vcmUnKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgZGlzcGxheUtub3dNb3JlIDogIWRpc3BsYXlLbm93TW9yZSB9KVxuICAgICAgZGlzcGxheVByb2R1Y3QgPT09IHRydWUgJiYgdGhpcy5zZXRTdGF0ZSh7IGRpc3BsYXlQcm9kdWN0OiAhZGlzcGxheVByb2R1Y3R9KVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHN0eWxlQ29sb3JUZXh0SGVhZGVyIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgdG9vZ2xlTmF2LCBkaXNwbGF5UHJvZHVjdCwgZGlzcGxheUtub3dNb3JlIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgY29uc3QgbWFpblN0eWxlID0gY3NzYFxuICAgICAgQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHU6NDAwLDQwMGksNzAwLDcwMGknKTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGJveC1zaGFkb3c6IDBweCAtOXB4IDI1cHggMHB4IHJnYmEoMCwwLDAsMC44KTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAtOHB4O1xuICAgICAgdWwge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgbGkge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNHB4O1xuICAgICAgICAgICAgJHtzdHlsZUNvbG9yVGV4dEhlYWRlciB8fGBjb2xvcjogIzAwMCBgfTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgICAgICAgc3BhbiBpbWcge1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtNnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLnN1Yi1tZW51e1xuICAgICAgICBvdmVyZmxvdzogaW5oZXJpdDtcbiAgICAgICAgbWFyZ2luOiAtMzBweCAwcHggLTMwcHggLTE0cHg7XG4gICAgICAgIGhlaWdodDogNzBweDtcbiAgICAgICAgcGFkZGluZzogMTBweCAwcHg7XG4gICAgICAgIGxpIGEge1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgc3BhbntcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDoxMHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLmhhbWJ1cmdlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwJTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgICAgICBkaXYge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gICAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgICAgbWFyZ2luOiA2cHggMHB4O1xuICAgICAgICAgIHRyYW5zaXRpb246IDAuNXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC5jcm9zcyB7XG4gICAgICAgIGRpdjpudGgtY2hpbGQoMSkge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMTNweDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgICAgICB9XG4gICAgICAgIGRpdjpudGgtY2hpbGQoMikge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtNnB4O1xuICAgICAgICAgIHRyYW5zaXRpb246IDAuNXM7XG4gICAgICAgIH1cbiAgICAgICAgZGl2Om50aC1jaGlsZCgzKSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIG1hcmdpbi10b3A6IC02cHg7XG4gICAgICAgICAgdHJhbnNpdGlvbjogMC41cztcbiAgICAgICAgfVxuICAgICAgICB3aWR0aDogMTAlO1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICBtYXJnaW46IDRweCAwcHg7XG4gICAgICAgIH1cbiAgICAgICAgdHJhbnNpdGlvbjogMC41cztcbiAgICAgIH1cbiAgICAgIC5zdWItbWVudS1tYWluLTYwMCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAucmVzcG9uc2l2ZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBsaW5lYXI7XG4gICAgICB9XG4gICAgICAuaGFtYnVyZ2VyLCAuY3Jvc3Mge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgIHVsIHtcbiAgICAgICAgICBsaSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1hcmdpbjogMTBweCAwcHg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5jcm9zcyB7XG4gICAgICAgICAgZGl2Om50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDBweDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDAuMXM7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5kaXNwbGF5LWltcG9ydGFudC02MDAge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLnN1Yi1tZW51LW1haW4tNjAwIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgICAgICAuc3ViLW1lbnUge1xuICAgICAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgICB9XG4gICAgICAgIC5yZXNwb25zaXZlIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGxpbmVhcjtcbiAgICAgICAgfVxuICAgICAgICAuaGFtYnVyZ2VyLCAuY3Jvc3Mge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYFxuICAgIGNvbnN0IGxpc3RHcmlkU3R5bGUgPSBjc3NgXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICBgXG4gICAgY29uc3QgYnV0dG9uVHJhbnBhcmVudCA9IGNzc2BcbiAgICAgIGNvbG9yOiAjMTc5OEQxO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzE3OThEMTtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xuICAgIGBcbiAgICBjb25zdCBidXR0b25GaWxsZWQgPSBjc3NgXG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxNzk4RDE7XG4gICAgICBmb250LXdlaWdodDogMTAwO1xuICAgICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgYFxuXG4gICAgLy8gY29uc3QgW2Rpc3BsYXlQcm9kdWN0LCBzZXREaXNwbGF5UHJvZHVjdF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgLy8gY29uc3QgW2Rpc3BsYXlLbm93TW9yZSwgc2V0RGlzcGxheUtub3dNb3JlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICAvLyBjb25zdCBbdG9vZ2xlTmF2LCBzZXRUb29nbGVOYXZdID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgICAvLyBjb25zdCBoYW5kbGVUb2dnbGUgPSB2YWx1ZSA9PiB7XG4gICAgLy8gICBpZiAodmFsdWUgPT09ICdkaXNwbGF5UHJvZHVjdCcpIHtcbiAgICAvLyAgICAgc2V0RGlzcGxheVByb2R1Y3QoIWRpc3BsYXlQcm9kdWN0KVxuICAgIC8vICAgICBkaXNwbGF5S25vd01vcmUgPT09IHRydWUgJiYgc2V0RGlzcGxheUtub3dNb3JlKCFkaXNwbGF5S25vd01vcmUpXG4gICAgLy8gICB9XG4gICAgLy8gICBpZiAodmFsdWUgPT09ICdkaXNwbGF5S25vd01vcmUnKSB7XG4gICAgLy8gICAgIHNldERpc3BsYXlLbm93TW9yZSghZGlzcGxheUtub3dNb3JlKVxuICAgIC8vICAgICBkaXNwbGF5UHJvZHVjdCA9PT0gdHJ1ZSAmJiBzZXREaXNwbGF5UHJvZHVjdCghZGlzcGxheVByb2R1Y3QpXG4gICAgLy8gICB9XG4gICAgLy8gfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsgbWFpblN0eWxlIH0+XG4gICAgICA8TWFpbkdyaWQgd2lkdGg9ezgwfT5cbiAgICAgICAgPExpc3RHcmlkIGNvbHM9ezN9IHN0eWxlPXsgbGlzdEdyaWRTdHlsZSB9PlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17IHRvb2dsZU5hdiA/ICdoYW1idXJnZXInIDogJ2Nyb3NzJyB9IG9uQ2xpY2s9eyAoKSA9PiB0aGlzLnNldFN0YXRlKHsgdG9vZ2xlTmF2OiAhdG9vZ2xlTmF2fSl9PlxuICAgICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9cIj5cbiAgICAgICAgICAgIDxhPlxuICAgICAgICAgICAgICA8aW1nIHNyYz1cIi9zdGF0aWMvZG9jb2JfbG9nby5zdmdcIiBhbHQ9XCJkb2NvYmxhc3QtbG9nb1wiIHdpZHRoPXsxMDB9Lz5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICAgIDwvTGlzdEdyaWQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgdG9vZ2xlTmF2ID8gJ3Jlc3BvbnNpdmUnIDogJycgfT5cbiAgICAgICAgICA8TGlzdEdyaWQgY29scz17MTV9PlxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17KCkgPT4gaGFuZGxlVG9nZ2xlKCdkaXNwbGF5UHJvZHVjdCcpfT5cbiAgICAgICAgICAgICAgICAgIDxzcGFuPlByb2R1azwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGRpc3BsYXlQcm9kdWN0ID8gXCIvc3RhdGljL2ljX3VwLnN2Z1wiIDogXCIvc3RhdGljL2ljX2Rvd24uc3ZnXCIgfSBhbHQ9XCJpY29uc1wiIHdpZHRoPXsyMH0vPlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1Yi1tZW51LW1haW4tNjAwXCI+XG4gICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPXtgc3ViLW1lbnUgJHsgZGlzcGxheVByb2R1Y3QgPyBjc3NgZGlzcGxheTpibG9jaztgIDogY3NzYGRpc3BsYXk6bm9uZTtgIH1gfT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcHJvZHVjdHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPjxzcGFuPjxpbWcgc3JjPVwiL3N0YXRpYy9pY19wcm9kdWtfZG9jb2JsYXN0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+PHNwYW4+RG9jb0JsYXN0PC9zcGFuPjwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3Byb2R1Y3RzL3doeVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tZW5nYXBhLnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+TWVuZ2FwYSBEb2NvQmxhc3Q/PC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvYmVuZWZpdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tYW5mYWF0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+TWFuZmFhdDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9mZWF0dXJlc1wiPjxhPkZpdHVyPC9hPjwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcHJpY2VcIj48YT5IYXJnYTwvYT48L0xpbms+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8YSBvbkNsaWNrPXsgKCkgPT4gaGFuZGxlVG9nZ2xlKCdkaXNwbGF5S25vd01vcmUnKSB9PlxuICAgICAgICAgICAgICAgICAgPHNwYW4+S2V0YWh1aSBMZWJpaDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGRpc3BsYXlLbm93TW9yZSA/IFwiL3N0YXRpYy9pY191cC5zdmdcIiA6IFwiL3N0YXRpYy9pY19kb3duLnN2Z1wiIH0gYWx0PVwiaWNvbnNcIiB3aWR0aD17MjB9Lz5cbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWItbWVudS1tYWluLTYwMFwiPlxuICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT17YHN1Yi1tZW51ICAkeyBkaXNwbGF5S25vd01vcmUgPyBjc3NgZGlzcGxheTpibG9jaztgIDogY3NzYGRpc3BsYXk6bm9uZTtgIH1gfT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW5mb3JtYXRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPjxzcGFuPjxpbWcgc3JjPVwiL3N0YXRpYy9pY19wcm9kdWtfZG9jb2JsYXN0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+PHNwYW4+UGFuZHVhbjwvc3Bhbj48L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9pbmZvcm1hdGlvbi9jdXN0b21lcnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPjxzcGFuPjxpbWcgc3JjPVwiL3N0YXRpYy9pY19wcm9kdWtfbWVuZ2FwYS5zdmdcIiBhbHQ9XCJpY29ucy1kb3duXCIgd2lkdGg9ezI1fS8+PC9zcGFuPlBlbGFuZ2dhbiBLYW1pPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW5mb3JtYXRpb24vcmVzb3VyY2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPjxzcGFuPjxpbWcgc3JjPVwiL3N0YXRpYy9pY19wcm9kdWtfbWFuZmFhdC5zdmdcIiBhbHQ9XCJpY29ucy1kb3duXCIgd2lkdGg9ezI1fS8+PC9zcGFuPlN1bWJlciBEYXlhPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW5mb3JtYXRpb24vdGVhbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tYW5mYWF0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+VGltIERvY29CbGFzdDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2luZm9ybWF0aW9uL291ckFwaVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tYW5mYWF0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+RG9jb0JsYXN0IEFQSTwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2luZm9ybWF0aW9uL2NvbnRhY3RcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPjxzcGFuPjxpbWcgc3JjPVwiL3N0YXRpYy9pY19wcm9kdWtfbWFuZmFhdC5zdmdcIiBhbHQ9XCJpY29ucy1kb3duXCIgd2lkdGg9ezI1fS8+PC9zcGFuPktvbnRhayBLYW1pPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2Jsb2dzXCI+PGE+QmxvZzwvYT48L0xpbms+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvTGlzdEdyaWQ+XG4gICAgICAgICAgPExpc3RHcmlkIGNvbHM9ezZ9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXNwb25zaXZlXCI+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvXCI+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBzdHlsZT17IGJ1dHRvblRyYW5wYXJlbnQgfT5NYXN1azwvQnV0dG9uPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvXCI+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBzdHlsZT17IGJ1dHRvbkZpbGxlZCB9PkNvYmEgR3JhdGlzPC9CdXR0b24+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvTGlzdEdyaWQ+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9NYWluR3JpZD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGlzcGxheS1pbXBvcnRhbnQtNjAwXCI+XG4gICAgICAgIDxNYWluR3JpZCB3aWR0aD17ODB9IGRpc3BsYXk9e2Rpc3BsYXlQcm9kdWN0ID8gJ2Jsb2NrJyA6ICdub25lJ30+XG4gICAgICAgICAgPExpc3RHcmlkIGNvbHM9ezEyfT5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzdWItbWVudVwiPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0c1wiPlxuICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19kb2NvYmxhc3Quc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj48c3Bhbj5Eb2NvQmxhc3Q8L3NwYW4+PC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvd2h5XCI+XG4gICAgICAgICAgICAgICAgICA8YT48c3Bhbj48aW1nIHNyYz1cIi9zdGF0aWMvaWNfcHJvZHVrX21lbmdhcGEuc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj5NZW5nYXBhIERvY29CbGFzdD88L2E+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+XG4gICAgICAgICAgICAgICAgICA8YT48c3Bhbj48aW1nIHNyYz1cIi9zdGF0aWMvaWNfcHJvZHVrX21hbmZhYXQuc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj5NYW5mYWF0PC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9MaXN0R3JpZD5cbiAgICAgICAgPC9NYWluR3JpZD5cbiAgICAgICAgPE1haW5HcmlkIHdpZHRoPXs4MH0gZGlzcGxheT17ZGlzcGxheUtub3dNb3JlID8gJ2Jsb2NrJyA6ICdub25lJ30+XG4gICAgICAgICAgPExpc3RHcmlkIGNvbHM9ezI0fT5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzdWItbWVudVwiPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9pbmZvcm1hdGlvblwiPlxuICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19kb2NvYmxhc3Quc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj48c3Bhbj5QYW5kdWFuPC9zcGFuPjwvYT5cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2luZm9ybWF0aW9uL2N1c3RvbWVyc1wiPlxuICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tZW5nYXBhLnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+UGVsYW5nZ2FuIEthbWk8L2E+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9pbmZvcm1hdGlvbi9yZXNvdXJjZVwiPlxuICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tYW5mYWF0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+U3VtYmVyIERheWE8L2E+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9pbmZvcm1hdGlvbi90ZWFtXCI+XG4gICAgICAgICAgICAgICAgICA8YT48c3Bhbj48aW1nIHNyYz1cIi9zdGF0aWMvaWNfcHJvZHVrX21hbmZhYXQuc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj5UaW0gRG9jb0JsYXN0PC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW5mb3JtYXRpb24vb3VyQXBpXCI+XG4gICAgICAgICAgICAgICAgICA8YT48c3Bhbj48aW1nIHNyYz1cIi9zdGF0aWMvaWNfcHJvZHVrX21hbmZhYXQuc3ZnXCIgYWx0PVwiaWNvbnMtZG93blwiIHdpZHRoPXsyNX0vPjwvc3Bhbj5Eb2NvQmxhc3QgQVBJPC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW5mb3JtYXRpb24vY29udGFjdFwiPlxuICAgICAgICAgICAgICAgICAgPGE+PHNwYW4+PGltZyBzcmM9XCIvc3RhdGljL2ljX3Byb2R1a19tYW5mYWF0LnN2Z1wiIGFsdD1cImljb25zLWRvd25cIiB3aWR0aD17MjV9Lz48L3NwYW4+S29udGFrIEthbWk8L2E+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L0xpc3RHcmlkPlxuICAgICAgICA8L01haW5HcmlkPlxuICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XG4iXX0= */");
      var listGridStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("padding-bottom:10px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var buttonTranparent =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("color:#1798D1;border:1px solid #1798D1;font-size:1rem;background-color:transparent;font-weight:100;padding:5px 15px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var buttonFilled =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("color:#fff;background-color:#1798D1;font-weight:100;padding:5px 15px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"); // const [displayProduct, setDisplayProduct] = useState(false);
      // const [displayKnowMore, setDisplayKnowMore] = useState(false);
      // const [toogleNav, setToogleNav] = useState(true);
      // const handleToggle = value => {
      //   if (value === 'displayProduct') {
      //     setDisplayProduct(!displayProduct)
      //     displayKnowMore === true && setDisplayKnowMore(!displayKnowMore)
      //   }
      //   if (value === 'displayKnowMore') {
      //     setDisplayKnowMore(!displayKnowMore)
      //     displayProduct === true && setDisplayProduct(!displayProduct)
      //   }
      // }

      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: mainStyle
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 3,
        style: listGridStyle
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: toogleNav ? 'hamburger' : 'cross',
        onClick: function onClick() {
          return _this2.setState({
            toogleNav: !toogleNav
          });
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/docob_logo.svg",
        alt: "docoblast-logo",
        width: 100
      })))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: toogleNav ? 'responsive' : ''
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 15
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayProduct');
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Produk"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: displayProduct ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "sub-menu-main-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu ".concat(displayProduct ?
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"))
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "DocoBlast")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/features"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Fitur"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/price"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Harga"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayKnowMore');
        }
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Ketahui Lebih"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: displayKnowMore ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "sub-menu-main-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu  ".concat(displayKnowMore ?
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_2__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"))
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Panduan")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/customers"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Pelanggan Kami"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/resource"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Sumber Daya"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/team"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Tim DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/ourApi"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "DocoBlast API"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/contact"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Kontak Kami")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/blogs"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Blog"))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 6
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "responsive"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_4__["Button"], {
        style: buttonTranparent
      }, "Masuk")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_4__["Button"], {
        style: buttonFilled
      }, "Coba Gratis")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
        className: "display-important-600"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80,
        display: displayProduct ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 12
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "DocoBlast")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_6__["default"], {
        width: 80,
        display: displayKnowMore ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 24
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
        className: "sub-menu"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_docoblast.svg",
        alt: "icons-down",
        width: 25
      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Panduan")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/customers"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_mengapa.svg",
        alt: "icons-down",
        width: 25
      })), "Pelanggan Kami"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/resource"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Sumber Daya"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/team"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Tim DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/ourApi"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "DocoBlast API"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
        href: "/information/contact"
      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
        src: "/static/ic_produk_manfaat.svg",
        alt: "icons-down",
        width: 25
      })), "Kontak Kami"))))))));
    }
  }]);

  return Index;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);

/* harmony default export */ __webpack_exports__["default"] = (Index);

/***/ })

})
//# sourceMappingURL=index.js.7ed41597a9b110f1f0b5.hot-update.js.map