webpackHotUpdate("static/development/pages/blogs/blogs.js",{

/***/ "./components/pageLayouts/partials/blogsHeader.jsx":
/*!*********************************************************!*\
  !*** ./components/pageLayouts/partials/blogsHeader.jsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var emotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emotion */ "./node_modules/emotion/dist/index.esm.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var reactism_elements__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! reactism/elements */ "./components/elements/index.jsx");
/* harmony import */ var reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! reactism/components/containers/gridLayouts/mainGrid */ "./components/containers/gridLayouts/mainGrid.jsx");
/* harmony import */ var reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! reactism/components/containers/gridLayouts/listGrid */ "./components/containers/gridLayouts/listGrid.jsx");


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








var Header = function Header(_ref) {
  var styleColorTextHeader = _ref.styleColorTextHeader,
      props = _objectWithoutProperties(_ref, ["styleColorTextHeader"]);

  var mainStyle =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("@import url('https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700,700i');font-family:'Ubuntu',sans-serif;position:fixed;z-index:1;box-shadow:0px -9px 25px 0px rgba(0,0,0,0.8);background-color:#fff;width:100%;margin:0px;a{text-decoration:none;}.hamburger{cursor:pointer;padding-top:5px;width:10%;float:right;transition:0.5s;div{background-color:#000;height:2px;margin:6px 0px;transition:0.5s;}}.cross{div:nth-child(1){transform:rotate(-45deg);margin-top:13px;transition:0.5s;}div:nth-child(2){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}div:nth-child(3){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}width:10%;float:right;div{background-color:#000;height:2px;margin:4px 0px;}transition:0.5s;}.main-menu{overflow:scroll;}ul{float:right;list-style-type:none;margin:0;padding:0;overflow:hidden;li{float:left;margin-top:10px;a{cursor:pointer;text-decoration:none;padding:14px;", styleColorTextHeader || "color: #000 ", ";font-size:0.9rem;span img{margin-bottom:-6px;}}}}.sub-menu{overflow:inherit;margin:-30px 0px -30px -14px;height:110px;padding:10px 0px;li{width:25%;a{padding:10px;span{margin-right:10px;}}}}.blogs-link{border-left:1px solid lightgrey;position:absolute;font-size:2rem;margin-left:7px;padding-left:10px;color:#1798D1;}.responsive{display:block;transition:all 0.5s linear;}.hamburger,.cross{display:none;}@media screen and (max-width:600px){margin:0px;ul{li{margin:10px 0px;width:100%;}}.sub-menu{height:200px;li{text-align:center;width:50%;a{padding:0px;}}}.responsive{display:none;transition:all 0.5s linear;}.hamburger,.cross{display:block;}}.search-section{float:right;}.hidden-search{visibility:hidden;}.close-icon{position:absolute;cursor:pointer;font-size:31px;margin:-14px 0px 0px 21px;}.sub-menu-responsive{display:none;}@media screen and (max-width:600px){.sub-menu-responsive{display:block;}.display-important-600{display:none;}.main-menu{float:left;}.close-icon{margin:-14px 0px;right:30px;}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  var mainGridStyle =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("width:60%;@media screen and (max-width:600px){width:90%;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  var gridMenuStyle =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("margin-bottom:20px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  var gridListStyle =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("background-color:white;box-shadow:0px 3px 6px -2px rgba(0,0,0,0.8);padding:24px 10px;position:absolute;top:75px;right:231px;@media screen and (max-width:600px){padding:0px;left:0;top:192px;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  var mainGridStyleSubscriber =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("label:nama;height:0;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
  var inputStyleSearch =
  /*#__PURE__*/
  Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("font-size:1rem;width:58%;position:absolute;right:20%;top:18px;@media screen and (max-width:600px){right:unset;top:72px;width:83%;margin:0px;margin-top:0px;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false),
      _useState2 = _slicedToArray(_useState, 2),
      displayProduct = _useState2[0],
      setDisplayProduct = _useState2[1];

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false),
      _useState4 = _slicedToArray(_useState3, 2),
      displayKnowMore = _useState4[0],
      setDisplayKnowMore = _useState4[1];

  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true),
      _useState6 = _slicedToArray(_useState5, 2),
      toogleNav = _useState6[0],
      setToogleNav = _useState6[1];

  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true),
      _useState8 = _slicedToArray(_useState7, 2),
      toogleSearch = _useState8[0],
      settoogleSearch = _useState8[1];

  var handleToggle = function handleToggle(value) {
    if (value === 'displayProduct') {
      setDisplayProduct(!displayProduct);
      displayKnowMore === true && setDisplayKnowMore(!displayKnowMore);
    }

    if (value === 'displayKnowMore') {
      setDisplayKnowMore(!displayKnowMore);
      displayProduct === true && setDisplayProduct(!displayProduct);
    }
  };

  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: mainStyle
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
    style: mainGridStyle
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
    cols: 8,
    style: gridMenuStyle
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: toogleNav ? 'hamburger' : 'cross',
    onClick: function onClick() {
      return setToogleNav(!toogleNav);
    }
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
    src: "/static/docob_logo.svg",
    alt: "docoblast-logo",
    width: 100
  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/blogs"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
    className: "blogs-link"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Blog")))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: toogleNav ? 'responsive' : ''
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
    cols: 16
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
    className: "main-menu"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", {
    className: "search-section"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: toogleSearch && 'hidden-search'
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Input"], {
    placeholder: "Masukkan Pencarian",
    style: inputStyleSearch
  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {
    class: "close-icon",
    onClick: function onClick() {
      return settoogleSearch(!toogleSearch);
    }
  }, "\xD7")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
    className: "search-button",
    onClick: function onClick() {
      return settoogleSearch(!toogleSearch);
    }
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
    src: "/static/ic_search.svg",
    alt: "ic-search",
    width: 20
  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
    onClick: function onClick() {
      return handleToggle('displayProduct');
    }
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Kategori"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
    src: displayProduct ? "/static/ic_up.svg" : "/static/ic_down.svg",
    alt: "icons",
    width: 20
  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: "sub-menu-responsive"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
    className: displayProduct ?
    /*#__PURE__*/
    Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
    /*#__PURE__*/
    Object(emotion__WEBPACK_IMPORTED_MODULE_1__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbmRpL0RvY3VtZW50cy9jb2RpbmcvbmV4dC9wcm9qZWN0L3Rlc3QvY29tcG9uZW50cy9wYWdlTGF5b3V0cy9wYXJ0aWFscy9ibG9nc0hlYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK1EwRSIsImZpbGUiOiIvVXNlcnMvZW5kaS9Eb2N1bWVudHMvY29kaW5nL25leHQvcHJvamVjdC90ZXN0L2NvbXBvbmVudHMvcGFnZUxheW91dHMvcGFydGlhbHMvYmxvZ3NIZWFkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2Vtb3Rpb24nXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgeyBCdXR0b24sIElucHV0IH0gZnJvbSAncmVhY3Rpc20vZWxlbWVudHMnXG5cbmltcG9ydCBNYWluR3JpZCAgZnJvbSAncmVhY3Rpc20vY29tcG9uZW50cy9jb250YWluZXJzL2dyaWRMYXlvdXRzL21haW5HcmlkJ1xuaW1wb3J0IExpc3RHcmlkICBmcm9tICdyZWFjdGlzbS9jb21wb25lbnRzL2NvbnRhaW5lcnMvZ3JpZExheW91dHMvbGlzdEdyaWQnXG5cbmNvbnN0IEhlYWRlciA9ICh7IHN0eWxlQ29sb3JUZXh0SGVhZGVyLCAuLi5wcm9wc30pID0+IHtcblxuICBjb25zdCBtYWluU3R5bGUgPSBjc3NgXG4gICAgQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHU6NDAwLDQwMGksNzAwLDcwMGknKTtcbiAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm94LXNoYWRvdzogMHB4IC05cHggMjVweCAwcHggcmdiYSgwLDAsMCwwLjgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgYSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgIC5oYW1idXJnZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgcGFkZGluZy10b3A6IDVweDtcbiAgICAgIHdpZHRoOiAxMCU7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgICAgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIG1hcmdpbjogNnB4IDBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMC41cztcbiAgICAgIH1cbiAgICB9XG4gICAgLmNyb3NzIHtcbiAgICAgIGRpdjpudGgtY2hpbGQoMSkge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBtYXJnaW4tdG9wOiAxM3B4O1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgICAgfVxuICAgICAgZGl2Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgbWFyZ2luLXRvcDogLTZweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMC41cztcbiAgICAgIH1cbiAgICAgIGRpdjpudGgtY2hpbGQoMykge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIG1hcmdpbi10b3A6IC02cHg7XG4gICAgICAgIHRyYW5zaXRpb246IDAuNXM7XG4gICAgICB9XG4gICAgICB3aWR0aDogMTAlO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIG1hcmdpbjogNHB4IDBweDtcbiAgICAgIH1cbiAgICAgIHRyYW5zaXRpb246IDAuNXM7XG4gICAgfVxuICAgIC5tYWluLW1lbnUge1xuICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICB9XG4gICAgdWwge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBsaSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICBhIHtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIHBhZGRpbmc6IDE0cHg7XG4gICAgICAgICAgJHtzdHlsZUNvbG9yVGV4dEhlYWRlciB8fGBjb2xvcjogIzAwMCBgfTtcbiAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgICBzcGFuIGltZyB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtNnB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAuc3ViLW1lbnV7XG4gICAgICBvdmVyZmxvdzogaW5oZXJpdDtcbiAgICAgIG1hcmdpbjogLTMwcHggMHB4IC0zMHB4IC0xNHB4O1xuICAgICAgaGVpZ2h0OiAxMTBweDtcbiAgICAgIHBhZGRpbmc6IDEwcHggMHB4O1xuICAgICAgbGkge1xuICAgICAgICB3aWR0aDogMjUlO1xuICAgICAgICBhIHtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgIHNwYW57XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6MTBweDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLmJsb2dzLWxpbmsge1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBsaWdodGdyZXk7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBtYXJnaW4tbGVmdDogN3B4O1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgY29sb3I6ICMxNzk4RDE7XG4gICAgfVxuICAgIC5yZXNwb25zaXZlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgbGluZWFyO1xuICAgIH1cbiAgICAuaGFtYnVyZ2VyLCAuY3Jvc3Mge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgdWwge1xuICAgICAgICBsaSB7XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDBweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLnN1Yi1tZW51IHtcbiAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgbGkge1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgIGEge1xuICAgICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLnJlc3BvbnNpdmUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBsaW5lYXI7XG4gICAgICB9XG4gICAgICAuaGFtYnVyZ2VyLCAuY3Jvc3Mge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG4gICAgLnNlYXJjaC1zZWN0aW9uIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG4gICAgLmhpZGRlbi1zZWFyY2gge1xuICAgICAgLyogZGlzcGxheTogbm9uZTsgKi9cbiAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB9XG4gICAgLmNsb3NlLWljb24ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZm9udC1zaXplOiAzMXB4O1xuICAgICAgbWFyZ2luOiAtMTRweCAwcHggMHB4IDIxcHg7XG4gICAgfVxuICAgIC5zdWItbWVudS1yZXNwb25zaXZlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAuc3ViLW1lbnUtcmVzcG9uc2l2ZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgICAgLmRpc3BsYXktaW1wb3J0YW50LTYwMCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAubWFpbi1tZW51IHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB9XG4gICAgICAuY2xvc2UtaWNvbiB7XG4gICAgICAgIG1hcmdpbjogLTE0cHggMHB4O1xuICAgICAgICByaWdodDogMzBweDtcbiAgICAgIH1cbiAgICB9XG4gIGBcbiAgY29uc3QgbWFpbkdyaWRTdHlsZSA9IGNzc2BcbiAgICB3aWR0aDogNjAlO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICB3aWR0aDogOTAlO1xuICAgIH1cbiAgYFxuICBjb25zdCBncmlkTWVudVN0eWxlID0gY3NzYFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGBcbiAgY29uc3QgZ3JpZExpc3RTdHlsZSA9IGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3gtc2hhZG93OiAwcHggM3B4IDZweCAtMnB4IHJnYmEoMCwwLDAsMC44KTtcbiAgICBwYWRkaW5nOiAyNHB4IDEwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNzVweDtcbiAgICByaWdodDogMjMxcHg7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IDE5MnB4O1xuICAgIH1cbiAgYFxuICBjb25zdCBtYWluR3JpZFN0eWxlU3Vic2NyaWJlciA9IGNzc2BcbiAgICBsYWJlbDogbmFtYTtcbiAgICBoZWlnaHQ6IDA7XG4gIGBcbiAgY29uc3QgaW5wdXRTdHlsZVNlYXJjaCA9IGNzc2BcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgd2lkdGg6IDU4JTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDIwJTtcbiAgICB0b3A6IDE4cHg7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgIHJpZ2h0OiB1bnNldDtcbiAgICAgIHRvcDogNzJweDtcbiAgICAgIHdpZHRoOiA4MyU7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICB9XG4gIGBcblxuICBjb25zdCBbZGlzcGxheVByb2R1Y3QsIHNldERpc3BsYXlQcm9kdWN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Rpc3BsYXlLbm93TW9yZSwgc2V0RGlzcGxheUtub3dNb3JlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Rvb2dsZU5hdiwgc2V0VG9vZ2xlTmF2XSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbdG9vZ2xlU2VhcmNoLCBzZXR0b29nbGVTZWFyY2hdID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgY29uc3QgaGFuZGxlVG9nZ2xlID0gdmFsdWUgPT4ge1xuICAgIGlmICh2YWx1ZSA9PT0gJ2Rpc3BsYXlQcm9kdWN0Jykge1xuICAgICAgc2V0RGlzcGxheVByb2R1Y3QoIWRpc3BsYXlQcm9kdWN0KVxuICAgICAgZGlzcGxheUtub3dNb3JlID09PSB0cnVlICYmIHNldERpc3BsYXlLbm93TW9yZSghZGlzcGxheUtub3dNb3JlKVxuICAgIH1cbiAgICBpZiAodmFsdWUgPT09ICdkaXNwbGF5S25vd01vcmUnKSB7XG4gICAgICBzZXREaXNwbGF5S25vd01vcmUoIWRpc3BsYXlLbm93TW9yZSlcbiAgICAgIGRpc3BsYXlQcm9kdWN0ID09PSB0cnVlICYmIHNldERpc3BsYXlQcm9kdWN0KCFkaXNwbGF5UHJvZHVjdClcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXsgbWFpblN0eWxlIH0+XG4gICAgPE1haW5HcmlkIHN0eWxlPXsgbWFpbkdyaWRTdHlsZSB9PlxuICAgICAgPExpc3RHcmlkIGNvbHM9ezh9IHN0eWxlPXsgZ3JpZE1lbnVTdHlsZSB9PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgdG9vZ2xlTmF2ID8gJ2hhbWJ1cmdlcicgOiAnY3Jvc3MnIH0gb25DbGljaz17ICgpID0+IHNldFRvb2dsZU5hdighdG9vZ2xlTmF2KX0+XG4gICAgICAgICAgICA8ZGl2PjwvZGl2PlxuICAgICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8TGluayBocmVmPVwiL1wiPlxuICAgICAgICAgIDxhPlxuICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2RvY29iX2xvZ28uc3ZnXCIgYWx0PVwiZG9jb2JsYXN0LWxvZ29cIiB3aWR0aD17MTAwfS8+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L0xpbms+XG4gICAgICAgIDxMaW5rIGhyZWY9XCIvYmxvZ3NcIj5cbiAgICAgICAgICA8YSBjbGFzc05hbWU9XCJibG9ncy1saW5rXCI+XG4gICAgICAgICAgICA8c3Bhbj5CbG9nPC9zcGFuPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgPC9MaXN0R3JpZD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsgdG9vZ2xlTmF2ID8gJ3Jlc3BvbnNpdmUnIDogJycgfT5cbiAgICAgICAgPExpc3RHcmlkIGNvbHM9ezE2fT5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwibWFpbi1tZW51XCI+XG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPVwic2VhcmNoLXNlY3Rpb25cIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eyB0b29nbGVTZWFyY2ggJiYgJ2hpZGRlbi1zZWFyY2gnIH0+XG4gICAgICAgICAgICAgICAgPElucHV0IHBsYWNlaG9sZGVyPVwiTWFzdWtrYW4gUGVuY2FyaWFuXCIgc3R5bGU9eyBpbnB1dFN0eWxlU2VhcmNoIH0gLz5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImNsb3NlLWljb25cIiBvbkNsaWNrPXsgKCkgPT4gc2V0dG9vZ2xlU2VhcmNoKCF0b29nbGVTZWFyY2gpfT4mdGltZXM7PC9zcGFuPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwic2VhcmNoLWJ1dHRvblwiIG9uQ2xpY2s9eyAoKSA9PiBzZXR0b29nbGVTZWFyY2goIXRvb2dsZVNlYXJjaCl9PlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3N0YXRpYy9pY19zZWFyY2guc3ZnXCIgYWx0PVwiaWMtc2VhcmNoXCIgd2lkdGg9ezIwfS8+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIDxhIG9uQ2xpY2s9eygpID0+IGhhbmRsZVRvZ2dsZSgnZGlzcGxheVByb2R1Y3QnKX0+XG4gICAgICAgICAgICAgICAgPHNwYW4+S2F0ZWdvcmk8L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGRpc3BsYXlQcm9kdWN0ID8gXCIvc3RhdGljL2ljX3VwLnN2Z1wiIDogXCIvc3RhdGljL2ljX2Rvd24uc3ZnXCIgfSBhbHQ9XCJpY29uc1wiIHdpZHRoPXsyMH0vPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1Yi1tZW51LXJlc3BvbnNpdmVcIj5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPXsgZGlzcGxheVByb2R1Y3QgPyBjc3NgZGlzcGxheTpibG9jaztgIDogY3NzYGRpc3BsYXk6bm9uZTtgIH0+XG4gICAgICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0c1wiPjxhPkRvY29CbGFzdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL3doeVwiPjxhPk1lbmdhcGEgRG9jb0JsYXN0PzwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL2JlbmVmaXRcIj48YT5NYW5mYWF0PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICAgICAgPGxpPjxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvYmVuZWZpdFwiPjxhPk1hbmZhYXQ8L2E+PC9MaW5rPjwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+PGE+TWFuZmFhdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL2JlbmVmaXRcIj48YT5NYW5mYWF0PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICAgICAgPGxpPjxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvYmVuZWZpdFwiPjxhPk1hbmZhYXQ8L2E+PC9MaW5rPjwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+PGE+TWFuZmFhdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL2JlbmVmaXRcIj48YT5NYW5mYWF0PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgPGEgb25DbGljaz17ICgpID0+IGhhbmRsZVRvZ2dsZSgnZGlzcGxheUtub3dNb3JlJykgfT5cbiAgICAgICAgICAgICAgICA8c3Bhbj5CZXJsYW5nZ2FuYW48L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGRpc3BsYXlLbm93TW9yZSA/IFwiL3N0YXRpYy9pY191cC5zdmdcIiA6IFwiL3N0YXRpYy9pY19kb3duLnN2Z1wiIH0gYWx0PVwiaWNvbnNcIiB3aWR0aD17MjB9Lz5cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9MaXN0R3JpZD5cbiAgICAgIDwvZGl2PlxuICAgIDwvTWFpbkdyaWQ+XG4gICAgPGRpdiBjbGFzc05hbWU9eyB0b29nbGVOYXYgPyAncmVzcG9uc2l2ZScgOiAnJyB9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJkaXNwbGF5LWltcG9ydGFudC02MDBcIj5cbiAgICAgICAgPE1haW5HcmlkIHN0eWxlPXsgbWFpbkdyaWRTdHlsZSB9IGRpc3BsYXk9e2Rpc3BsYXlQcm9kdWN0ID8gJ2Jsb2NrJyA6ICdub25lJ30+XG4gICAgICAgICAgPExpc3RHcmlkIGNvbHM9ezI0fT5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzdWItbWVudVwiPlxuICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0c1wiPjxhPkRvY29CbGFzdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgPGxpPjxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvd2h5XCI+PGE+TWVuZ2FwYSBEb2NvQmxhc3Q/PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+PGE+TWFuZmFhdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgPGxpPjxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvYmVuZWZpdFwiPjxhPk1hbmZhYXQ8L2E+PC9MaW5rPjwvbGk+XG4gICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL2JlbmVmaXRcIj48YT5NYW5mYWF0PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+PGE+TWFuZmFhdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgPGxpPjxMaW5rIGhyZWY9XCIvcHJvZHVjdHMvYmVuZWZpdFwiPjxhPk1hbmZhYXQ8L2E+PC9MaW5rPjwvbGk+XG4gICAgICAgICAgICAgIDxsaT48TGluayBocmVmPVwiL3Byb2R1Y3RzL2JlbmVmaXRcIj48YT5NYW5mYWF0PC9hPjwvTGluaz48L2xpPlxuICAgICAgICAgICAgICA8bGk+PExpbmsgaHJlZj1cIi9wcm9kdWN0cy9iZW5lZml0XCI+PGE+TWFuZmFhdDwvYT48L0xpbms+PC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9MaXN0R3JpZD5cbiAgICAgICAgPC9NYWluR3JpZD5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1haW5HcmlkIHdpZHRoPXs1MH0gZGVmYXVsdEhlaWdodD17IHRydWUgfSBzdHlsZT17IG1haW5HcmlkU3R5bGVTdWJzY3JpYmVyIH0gZGlzcGxheT17ZGlzcGxheUtub3dNb3JlID8gJ2Jsb2NrJyA6ICdub25lJ30+XG4gICAgICAgIDxMaXN0R3JpZCBjb2xzPXs2fSBzdHlsZT17IGdyaWRMaXN0U3R5bGUgfT5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPElucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFbWFpbCBBbmRhXCIgZm9udFNpemU9ezF9IHRleHRBbGlnbj1cImNlbnRlclwiIHdpZHRoPXsgOTIgfS8+XG4gICAgICAgICAgICA8QnV0dG9uIHdpZHRoPXsxMDB9IGNvbG9yPVwicHJpbWFyeVwiPkxhbmdnYW5hbjwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0xpc3RHcmlkPlxuICAgICAgPC9NYWluR3JpZD5cbiAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyXG4iXX0= */")
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/why"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
    onClick: function onClick() {
      return handleToggle('displayKnowMore');
    }
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, "Berlangganan"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img", {
    src: displayKnowMore ? "/static/ic_up.svg" : "/static/ic_down.svg",
    alt: "icons",
    width: 20
  })))))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: toogleNav ? 'responsive' : ''
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: "display-important-600"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
    style: mainGridStyle,
    display: displayProduct ? 'block' : 'none'
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
    cols: 24
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul", {
    className: "sub-menu"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/why"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "/products/benefit"
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", null, "Manfaat"))))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
    width: 50,
    defaultHeight: true,
    style: mainGridStyleSubscriber,
    display: displayKnowMore ? 'block' : 'none'
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
    cols: 6,
    style: gridListStyle
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Input"], {
    type: "text",
    placeholder: "Email Anda",
    fontSize: 1,
    textAlign: "center",
    width: 92
  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Button"], {
    width: 100,
    color: "primary"
  }, "Langganan"))))));
};

/* harmony default export */ __webpack_exports__["default"] = (Header);

/***/ })

})
//# sourceMappingURL=blogs.js.ba1ad12018ffec0652d7.hot-update.js.map