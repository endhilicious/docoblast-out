webpackHotUpdate("static/development/pages/blogs/blogs.js",{

/***/ "./components/pageLayouts/partials/blogsHeader.jsx":
/*!*********************************************************!*\
  !*** ./components/pageLayouts/partials/blogsHeader.jsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var emotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emotion */ "./node_modules/emotion/dist/index.esm.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var reactism_elements__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! reactism/elements */ "./components/elements/index.jsx");
/* harmony import */ var reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! reactism/components/containers/gridLayouts/mainGrid */ "./components/containers/gridLayouts/mainGrid.jsx");
/* harmony import */ var reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! reactism/components/containers/gridLayouts/listGrid */ "./components/containers/gridLayouts/listGrid.jsx");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// import { useState, useEffect } from 'react';





 // const Header = ({ styleColorTextHeader, ...props}) => {
// }
// export default Header



var Header =
/*#__PURE__*/
function (_Component) {
  _inherits(Header, _Component);

  // const [displayProduct, setDisplayProduct] = useState(false);
  // const [displayKnowMore, setDisplayKnowMore] = useState(false);
  // const [toogleNav, setToogleNav] = useState(true);
  // const [toogleSearch, settoogleSearch] = useState(true);
  // handleToggle = value => {
  //   if (value === 'displayProduct') {
  //     setDisplayProduct(!displayProduct)
  //     displayKnowMore === true && setDisplayKnowMore(!displayKnowMore)
  //   }
  //   if (value === 'displayKnowMore') {
  //     setDisplayKnowMore(!displayKnowMore)
  //     displayProduct === true && setDisplayProduct(!displayProduct)
  //   }
  // }
  function Header(props) {
    var _this;

    _classCallCheck(this, Header);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleDocumentClick", function (e) {
      if (_assertThisInitialized(_assertThisInitialized(_this))) {
        if (!Object(react_dom__WEBPACK_IMPORTED_MODULE_1__["findDOMNode"])(_assertThisInitialized(_assertThisInitialized(_this))).contains(e.target)) {
          _this.setState({
            toogleNav: true
          });
        }
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleToggle", function (value) {
      var _this$state = _this.state,
          displayProduct = _this$state.displayProduct,
          displayKnowMore = _this$state.displayKnowMore;

      if (value === 'displayProduct') {
        // setDisplayProduct(!displayProduct)
        _this.setState({
          displayProduct: !displayProduct
        });

        displayKnowMore === true && _this.setState({
          displayKnowMore: !displayKnowMore
        });
      }

      if (value === 'displayKnowMore') {
        _this.setState({
          displayKnowMore: !displayKnowMore
        });

        displayProduct === true && _this.setState({
          displayProduct: !displayProduct
        });
      }
    });

    _this.state = {
      displayProduct: false,
      displayKnowMore: false,
      toogleNav: true,
      toogleSearch: true
    };
    return _this;
  }

  _createClass(Header, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      document.addEventListener('click', this.handleDocumentClick, false);
      document.addEventListener('touchend', this.handleDocumentClick, false);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener('click', this.handleDocumentClick, false);
      document.removeEventListener('touchend', this.handleDocumentClick, false);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var handleToggle = this.handleToggle;
      var styleColorTextHeader = this.props.styleColorTextHeader;
      var _this$state2 = this.state,
          displayProduct = _this$state2.displayProduct,
          displayKnowMore = _this$state2.displayKnowMore,
          toogleNav = _this$state2.toogleNav,
          toogleSearch = _this$state2.toogleSearch;
      var mainStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("@import url('https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700,700i');font-family:'Ubuntu',sans-serif;position:fixed;z-index:1;box-shadow:0px -9px 25px 0px rgba(0,0,0,0.8);background-color:#fff;width:100%;margin:0px;a{text-decoration:none;}.hamburger{cursor:pointer;padding-top:5px;width:10%;float:right;transition:0.5s;div{background-color:#000;height:2px;margin:6px 0px;transition:0.5s;}}.cross{div:nth-child(1){transform:rotate(-45deg);margin-top:13px;transition:0.5s;}div:nth-child(2){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}div:nth-child(3){transform:rotate(45deg);margin-top:-6px;transition:0.5s;}width:10%;float:right;div{background-color:#000;height:2px;margin:4px 0px;}transition:0.5s;}.main-menu{overflow:scroll;}ul{float:right;list-style-type:none;margin:0;padding:0;overflow:hidden;li{float:left;margin-top:10px;a{cursor:pointer;text-decoration:none;padding:14px;", styleColorTextHeader || "color: #000 ", ";font-size:0.9rem;span img{margin-bottom:-6px;}}}}.sub-menu{overflow:inherit;margin:-30px 0px -30px -14px;height:110px;padding:10px 0px;li{width:25%;a{padding:10px;span{margin-right:10px;}}}}.blogs-link{border-left:1px solid lightgrey;position:absolute;font-size:2rem;margin-left:7px;padding-left:10px;color:#1798D1;}.responsive{display:block;transition:all 0.5s linear;}.hamburger,.cross{display:none;}@media screen and (max-width:600px){margin:0px;ul{li{margin:15px 0px;width:100%;}}.sub-menu{height:200px;li{text-align:center;width:50%;a{padding:0px;}}}.responsive{display:none;transition:all 0.5s linear;}.hamburger,.cross{display:block;}}.search-section{float:right;}.hidden-search{display:none;}.close-icon{position:absolute;cursor:pointer;font-size:31px;margin:-14px 0px 0px 21px;}.sub-menu-responsive{display:none;}@media screen and (max-width:600px){.sub-menu-responsive{display:block;ul{li{width:50%;font-size:0.6rem;text-align:center;}}}.display-important-600{display:none;}.main-menu{float:left;}.close-icon{display:none;}.search-button{display:none;}.hidden-search{display:block;}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var mainGridStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("width:60%;@media screen and (max-width:600px){width:90%;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var gridMenuStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("margin-bottom:20px;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var gridListStyle =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("background-color:white;box-shadow:0px 3px 6px -2px rgba(0,0,0,0.8);padding:24px 10px;position:absolute;top:75px;right:231px;@media screen and (max-width:600px){padding:0px;left:0;top:192px;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var mainGridStyleSubscriber =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("label:nama;height:0;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      var inputStyleSearch =
      /*#__PURE__*/
      Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("font-family:'Ubuntu',sans-serif;font-size:1rem;width:58%;position:absolute;right:20%;top:18px;@media screen and (max-width:600px){right:unset;top:72px;width:83%;margin:0px;margin-top:0px;border:1px solid lightgrey;outline:none;}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
      return react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: mainStyle
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
        style: mainGridStyle
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 8,
        style: gridMenuStyle
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: toogleNav ? 'hamburger' : 'cross',
        onClick: function onClick() {
          return _this2.setState({
            toogleNav: !toogleNav
          });
        }
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", null), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", null))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("img", {
        src: "/static/docob_logo.svg",
        alt: "docoblast-logo",
        width: 100
      }))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/blogs"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", {
        className: "blogs-link"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", null, "Blog")))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: toogleNav ? 'responsive' : ''
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 16
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("ul", {
        className: "main-menu"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", {
        className: "search-section"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: toogleSearch && 'hidden-search'
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Input"], {
        placeholder: "Masukkan Pencarian",
        style: inputStyleSearch
      }), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", {
        class: "close-icon",
        onClick: function onClick() {
          return _this2.setState({
            toogleSearch: !toogleSearch
          });
        }
      }, "\xD7")), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", {
        className: "search-button",
        onClick: function onClick() {
          return _this2.setState({
            toogleSearch: !toogleSearch
          });
        }
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("img", {
        src: "/static/ic_search.svg",
        alt: "ic-search",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayProduct');
        }
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", null, "Kategori"), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("img", {
        src: displayProduct ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      }))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: "sub-menu-responsive"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("ul", {
        className: displayProduct ?
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("display:block;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */") :
        /*#__PURE__*/
        Object(emotion__WEBPACK_IMPORTED_MODULE_0__["css"])("display:none;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat")))))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", {
        onClick: function onClick() {
          return handleToggle('displayKnowMore');
        }
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", null, "Berlangganan"), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("span", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("img", {
        src: displayKnowMore ? "/static/ic_up.svg" : "/static/ic_down.svg",
        alt: "icons",
        width: 20
      })))))))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: toogleNav ? 'responsive' : ''
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", {
        className: "display-important-600"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
        style: mainGridStyle,
        display: displayProduct ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 24
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("ul", {
        className: "sub-menu"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "DocoBlast"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/why"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Mengapa DocoBlast?"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("li", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
        href: "/products/benefit"
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("a", null, "Manfaat"))))))), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_mainGrid__WEBPACK_IMPORTED_MODULE_4__["default"], {
        width: 50,
        defaultHeight: true,
        style: mainGridStyleSubscriber,
        display: displayKnowMore ? 'block' : 'none'
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_components_containers_gridLayouts_listGrid__WEBPACK_IMPORTED_MODULE_5__["default"], {
        cols: 6,
        style: gridListStyle
      }, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement("div", null, react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Input"], {
        type: "text",
        placeholder: "Email Anda",
        fontSize: 1,
        textAlign: "center",
        width: 92
      }), react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(reactism_elements__WEBPACK_IMPORTED_MODULE_3__["Button"], {
        width: 100,
        color: "primary"
      }, "Langganan"))))));
    }
  }]);

  return Header;
}(react__WEBPACK_IMPORTED_MODULE_6__["Component"]);

/* harmony default export */ __webpack_exports__["default"] = (Header);

/***/ })

})
//# sourceMappingURL=blogs.js.a60bac1c3d577847dec4.hot-update.js.map